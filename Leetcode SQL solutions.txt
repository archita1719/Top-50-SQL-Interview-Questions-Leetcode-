Question 1 - Recyclable and Low Fat Products
select product_id from Products
where low_fats='Y' and recyclable='Y'

Question 2 - Find Customer Referee
select name from Customer
where referee_id!=2 or referee_id is null

Question 3 - Big Countries
select name, population, area from World
where area>=3000000 or population>=25000000

Question 4 - Article Views I
select distinct author_id as id
from Views
where author_id=viewer_id 
order by id

Question 5 - Invalid Tweets
select tweet_id from Tweets
where length(content)>15

Question 6 - Replace Employee ID With The Unique Identifier
select unique_id, name from EmployeeUNI
right join Employees on EmployeeUNI.id=Employees.id

Question 7 - Product Sales Analysis I
select product_name, year, price
from Sales
join Product on Sales.product_id=Product.product_id

Question 8 - Customer Who Visited but Did Not Make Any Transactions
select customer_id,
count(Visits.visit_id) as count_no_trans from Visits
left join Transactions on Visits.visit_id=Transactions.visit_id
where Transactions.visit_id is null
group by customer_id

Question 9 - Rising Temperature
select b.id from Weather a
join Weather b 
where b.temperature>a.temperature and datediff(b.recordDate,a.recordDate)=1

Question 10 - Average Time of Process per Machine
select a.machine_id,
round(avg(b.timestamp-a.timestamp),3) as processing_time
from Activity a
join Activity b on a.machine_id=b.machine_id and a.activity_type ='start' and b.activity_type='end'
where a.process_id=b.process_id
group by machine_id

Question 11 - Employee Bonus
select name, bonus from Employee
left join Bonus on Employee.empId=Bonus.empId
where bonus<1000 or bonus is null

Question 12 - Students and Examinations
select 
Students.student_id,
Students.student_name,
Subjects.subject_name,
count(Examinations.subject_name) as attended_exams
from 
students join subjects left join Examinations
on 
Students.student_id = Examinations.student_id and
subjects.subject_name = Examinations.subject_name
group by 
Students.student_id, 
Students.student_name,
Subjects.subject_name
order by  
Students.student_id,
Subjects.subject_name;

Question 13 - Managers with at Least 5 Direct Reports
select a.name from Employee a
inner join Employee b on a.id = b.managerId
group by b.managerId
having count(b.managerId)>=5

Question 14 - Confirmation Rate
select Signups.user_id, round(avg(if (action = "confirmed", 1, 0)),2) as confirmation_rate
from Signups
left join Confirmations on Signups.user_id = Confirmations.user_id
group by Signups.user_id;

Question 15 - Not Boring Movies
select id, movie, description, rating from(
select (case when id%2<>0 then id else 0 end) as id, movie, description, rating
from Cinema
where description not like "boring" 
order by rating desc)X
where id<>0

Question 16 - Average Selling Price
select Prices.product_id, 
ifnull(round(sum(price*units)/sum(units),2),0) as average_price
from Prices
left join UnitsSold on Prices.product_id = UnitsSold.product_id
and purchase_date between start_date and end_date
group by product_id

Question 17 - Project Employees I
select project_id,
round(avg(experience_years),2) as average_years
from Project
inner join Employee on Project.employee_id = Employee.employee_id
group by project_id

Question 18 - Percentage of Users Attended a Contest
select distinct contest_id,
round(count(distinct user_id)*100/(select count(user_id) from Users),2) as percentage
from Register
group by contest_id
order by percentage desc,contest_id

Question 19 - Queries Quality and Percentage
select query_name,
round(avg(rating/position),2) as quality,
round((sum(case when rating<3 then 1 else 0 end)*100/count(*)),2) as poor_query_percentage
from Queries
where query_name is not null
group by query_name

Question 20 - Monthly Transactions I
select date_format(trans_date, "%Y-%m") as month, country,
count(id) as trans_count,
sum(if (state="approved", 1, 0)) as approved_count,
sum(amount) as trans_total_amount,
sum(if (state="approved", amount, 0)) as approved_total_amount
from transactions
group by month, country;

Question 21 - Immediate Food Delivery II
select round(avg(if(order_date=customer_pref_delivery_date,1,0)*100),2) as immediate_percentage
from Delivery
where (customer_id,order_date) in (
    select customer_id, min(order_date) from Delivery
    group by customer_id
);

Question 22 - Game Play Analysis IV
select round((count(player_id)/(select count(distinct player_id) from Activity)),2) as fraction
from Activity
where (player_id, date_add(event_date, interval -1 day)) in (
    select player_id, min(event_date) from Activity group by player_id
);

Question 23 - Number of Unique Subjects Taught by Each Teacher
select teacher_id, count(distinct subject_id) as cnt
from Teacher
group by teacher_id

Question 24 - User Activity for the Past 30 Days I
select activity_date as day, count(distinct user_id) as active_users
from Activity
where activity_date between '2019-06-28' and '2019-07-27'
group by activity_date

Question 25 - Product Sales Analysis III
select product_id, year as first_year, quantity, price
from sales
where (product_id,year) in (
    select product_id,min(year) from sales
    group by product_id
);

Question 26 - Classes More Than 5 Students
select class from(
select class, count(class) as class_coun from Courses
group by class
having class_coun>=5)X

Question 27 - Find Followers Count
select user_id, count(follower_id) as followers_count
from Followers
group by user_id
order by user_id

Question 28 - Biggest Single Number
select max(num) as num from
(
select num, count(num) as num_coun
from MyNumbers
group by num
having num_coun=1)X

Question 29 - Customers Who Bought All Products
select customer_id from customer
group by customer_id
having count(distinct product_key) = (select count(product_key) from product);

Question 30 - The Number of Employees Which Report to Each Employee
select e.employee_id, e.name, count(m.reports_to) as reports_count, round(avg(m.age),0) as average_age
from Employees e
join Employees m on e.employee_id=m.reports_to
group by employee_id
order by employee_id

Question 31 - Primary Department for Each Employee
with cte1 as (select employee_id, department_id, count(employee_id) as occur from Employee
group by employee_id
having occur=1),
cte2 as (select employee_id, department_id 
from Employee
where primary_flag='Y'
group by employee_id)

select employee_id, department_id from cte1
union
select employee_id, department_id from cte2

Question 32 - Triangle Judgement
select x, y, z,
(case when x+y>z and y+z>x and x+z>y then 'Yes' else 'No' end) as triangle 
from Triangle

Question 33 - Consecutive Numbers
select distinct a.num as ConsecutiveNums from logs a
join logs b on a.id=b.id-1
join logs c on b.id=c.id-1
where a.num=b.num and b.num=c.num;

Question 34 - Product Price at a Given Date
select distinct product_id,
first_value(new_price) over (partition by product_id order by change_date desc) as price
from products
where change_date<='2019-08-16'
Union
select distinct product_id, 10 as price from products
where product_id not in (select product_id from products where change_date<='2019-08-16');

Question 35 - Last Person to Fit in the Bus
select distinct last_value(person_name) over () as person_name from
(
    select person_name, 
    sum(weight) over (order by turn) as cum_weight
    from Queue
) as pwt
where cum_weight<=1000;

Question 36 - Count Salary Categories
select "High Salary" as category, count(account_id) as accounts_count from accounts where income>50000
Union
select "Average Salary" as category, count(account_id) as accounts_count from accounts where income between 20000 and 50000
Union
select "Low Salary" as category, count(account_id) as accounts_count from accounts where income<20000

Question 37 - Employees Whose Manager Left the Company
select employee_id from Employees
where manager_id is not null and salary<30000 and manager_id not in (select employee_id from Employees)
order by employee_id;

Question 38 - Exchange Seats
select
case
  when id%2<>0 and id=(select max(id) from seat) then id
  when id%2<>0 then id+1
  else id-1 end as id, student
from seat
order by id;

Question 39 - Movie Rating
with cte1 as (select Users.user_id, name, count(movie_id) as rated_movie_count from Users
inner join MovieRating on Users.user_id=MovieRating.user_id
group by name
order by rated_movie_count desc, name
limit 1),
cte2 as(select title, avg(rating) as avg_rating from Movies
inner join MovieRating on Movies.movie_id=MovieRating.movie_id
where created_at between '2020-02-01' and '2020-02-29'
group by title
order by avg_rating desc, title
limit 1
)
select name as results from cte1
union all
select title from cte2;

Question 40 - Restaurant Growth
with
sum_sales as (
select customer_id, visited_on, sum(amount) as date_wise_sum from customer
group by visited_on
)
select visited_on,
sum(date_wise_sum) over (order by visited_on rows between 6 preceding and current row) as amount,
round((avg(date_wise_sum) over (order by visited_on rows between 6 preceding and current row)),2) as average_amount
from sum_sales
group by visited_on
limit 1000
offset 6

Question 41 - Friend Requests II: Who Has the Most Friends
with cte as (
select requester_id as id from RequestAccepted
union all
select accepter_id from RequestAccepted
)
select id, count(id) as num from cte
group by id
order by num desc
limit 1

Question 42 - Investments in 2016
select round(sum(tiv_2016),2) as tiv_2016 from Insurance
where
tiv_2015 in (
    select tiv_2015 from Insurance
    group by tiv_2015
    having count(tiv_2015)>1
) and
(lat, lon) in (
    select lat, lon from Insurance
    group by lat, lon
    having count(lat)=1 and count(lon)=1
)

Question 43 - Department Top Three Salaries
select Department, Employee, Salary from(
select Department.name as Department, Employee.name as Employee, salary as Salary,
dense_rank() over (partition by Department.name order by salary desc) as ranking
from Department
inner join Employee on Department.id = Employee.departmentId
)X
where ranking=1 or ranking=2 or ranking=3

Question 44 - Fix Names in a Table
select user_id,
concat(upper(substr(name,1,1)),lower(substr(name,2))) as name
from Users
order by user_id

Question 45 - Patients With a Condition
select patient_id, patient_name, conditions from Patients
where conditions like 'DIAB1%' or conditions like '% DIAB1%'

Question 46 - Delete Duplicate Emails
delete p1
from Person p1, Person p2
where p1.email = p2.email
and p1.id>p2.id

Question 47 - Second Highest Salary
select ifnull((select distinct salary
from Employee
order by salary desc
limit 1
offset 1),null) as SecondHighestSalary

Question 48 - Group Sold Products By The Date
select sell_date,
count(distinct product) as num_sold,
group_concat(distinct product) as products
from Activities
group by sell_date
order by sell_date;

Question 49 - List the Products Ordered in a Period
select product_name, sum(unit) as unit
from Products
inner join Orders on Products.product_id=Orders.product_id
where order_date between '2020-02-01' and '2020-02-29'
group by product_name
having sum(unit)>=100

Question 50 - Find Users With Valid E-Mails
select user_id, name, mail
from Users
where mail regexp '^[a-zA-Z][a-zA-Z0-9._-]+@leetcode[.]com$'
or mail regexp '^[a-zA-Z]+@leetcode[.]com$'


